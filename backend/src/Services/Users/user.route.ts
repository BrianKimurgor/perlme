import { Router } from "express";
import {
  getAllUsersController,
  getUser,
  getUserByEmailController,
  updateUserController,
  deleteUserController,
  suspendUserController,
  unsuspendUserController,
  checkUserStatusController,
} from "./user.controller";

import {
  anyAuth,
  adminAuth,
  adminOrModeratorAuth,
} from "../../Middlewares/BearAuth";

const userRouters = Router();

// ========================== USER ROUTES ==========================

// ðŸ”¹ Get all users â€” only ADMIN or MODERATOR can view all users
userRouters.get("/users/all", adminOrModeratorAuth, getAllUsersController);

// ðŸ”¹ Get user by ID â€” any authenticated user can view
userRouters.get("/users/:id", anyAuth, getUser);

// ðŸ”¹ Get user by email â€” only ADMIN or MODERATOR
userRouters.get("/users/", adminOrModeratorAuth, getUserByEmailController);

// ðŸ”¹ Update user â€” user can update their own data (or admin can update anyone)
userRouters.patch("/users/:id", anyAuth, updateUserController);

// ðŸ”¹ Delete user â€” only ADMIN can delete
userRouters.delete("/users/:id", adminAuth, deleteUserController);

// ðŸ”¹ Suspend user â€” only ADMIN or MODERATOR
userRouters.post("/users/:id/suspend", adminOrModeratorAuth, suspendUserController);

// ðŸ”¹ Unsuspend user â€” only ADMIN or MODERATOR
userRouters.post("/users/:id/unsuspend", adminOrModeratorAuth, unsuspendUserController);

// ðŸ”¹ Check if user is active â€” any authenticated user
userRouters.get("/users/:id/status", anyAuth, checkUserStatusController);

export default userRouters;
