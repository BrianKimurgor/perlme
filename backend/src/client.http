### Environment Variables
@baseUrl = http://localhost:5000
@apiVersion = api

# Tokens will be set dynamically after login
@AdminToken = {{$dotenv ADMIN_TOKEN}}
@UserToken = {{$dotenv USER_TOKEN}}

@baseUrl = {{$dotenv API_BASE_URL}}
@adminUsername = {{$dotenv ADMIN_USERNAME}}
@adminEmail = {{$dotenv ADMIN_EMAIL}}
@adminPassword = {{$dotenv ADMIN_PASSWORD}}


### ðŸŸ¢ AUTHENTICATION ENDPOINTS
### Register Admin User
# @name admin_register
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "{{adminUsername}}",
  "email": "{{adminEmail}}",
  "passwordHash": "{{adminPassword}}",
  "dateOfBirth": "1998-03-12T00:00:00Z",
  "gender": "MALE",
  "orientation": "STRAIGHT",
  "bio": "I manage PerlMe operations ðŸ‘‘",
  "role": "ADMIN"
}

### Register Regular User
# @name user_register
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "{{$dotenv USER_USERNAME}}",
  "email": "{{$dotenv USER_EMAIL}}",
  "passwordHash": "{{$dotenv USER_PASSWORD}}",
  "dateOfBirth": "1999-06-15T00:00:00Z",
  "gender": "MALE",
  "orientation": "STRAIGHT",
  "bio": "Excited to join PerlMe community ðŸ’œ"
}

### Register Underage User (Should Fail)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "YoungUser",
  "email": "{{$dotenv UNDERAGE_EMAIL}}",
  "passwordHash": "test1234",
  "dateOfBirth": "2012-09-20T00:00:00Z",
  "gender": "FEMALE",
  "orientation": "STRAIGHT",
  "bio": "I'm underage for this platform"
}

### Login Admin User
# @name admin_login
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "{{$dotenv ADMIN_EMAIL}}",
  "passwordHash": "{{$dotenv ADMIN_PASSWORD}}"
}

### Login Regular User
# @name user_login
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "{{$dotenv USER_EMAIL}}",
  "passwordHash": "{{$dotenv USER_PASSWORD}}"
}

### Verify Email (Generic - use appropriate email)
PUT {{baseUrl}}/api/auth/verify-email
Content-Type: application/json

{
  "email": "{{$dotenv ADMIN_EMAIL}}",
  "confirmationCode": "683946"
}

### Resend Verification Code
POST {{baseUrl}}/api/auth/resend-verification
Content-Type: application/json

{
  "email": "{{$dotenv ADMIN_EMAIL}}"
}

### Request Password Reset
POST {{baseUrl}}/api/auth/password-reset
Content-Type: application/json

{
  "email": "{{$dotenv ADMIN_EMAIL}}"
}

### Reset Password (Replace token)
PUT {{baseUrl}}/api/auth/reset/REPLACE_WITH_ACTUAL_TOKEN
Content-Type: application/json

{
  "password": "newSecurePassword123"
}

########################################
### ðŸ‘¤ USER MANAGEMENT ENDPOINTS
########################################

### Get All Users (Admin Only)
GET {{baseUrl}}/api/users/all
Authorization: Bearer {{$dotenv AdminToken}}

### Get User by ID
GET {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}
Authorization: Bearer {{$dotenv AdminToken}}

### Get User by Email (Admin Only)
GET {{baseUrl}}/api/users?email={{$dotenv USER_EMAIL}}
Authorization: Bearer {{$dotenv AdminToken}}

### Update User Profile
PATCH {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}
Authorization: Bearer {{$dotenv AdminToken}}
Content-Type: application/json

{
  "bio": "Just updated my bio ðŸŒ±",
  "passwordHash": "newPassword123",
  "role": "MODERATOR"
}

### Delete User (Admin Only)
DELETE {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}
Authorization: Bearer {{$dotenv AdminToken}}

### Suspend User
POST {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}/suspend
Authorization: Bearer {{$dotenv AdminToken}}
Content-Type: application/json

{
  "until": "2025-10-25T14:44:42Z",
  "reason": "Violation of community guidelines"
}

### Unsuspend User
POST {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}/unsuspend
Authorization: Bearer {{$dotenv AdminToken}}

### Check User Status
GET {{baseUrl}}/api/users/{{$dotenv TEST_USER_ID}}/status
Authorization: Bearer {{$dotenv AdminToken}}

########################################
### ðŸŽ¯ UTILITY REQUESTS
########################################

### Health Check
GET {{baseUrl}}/health

### API Version
GET {{baseUrl}}/api/version